{:deps {clj-time/clj-time {:mvn/version "0.15.2"}
        day8.re-frame/re-frame-10x  {:mvn/version "1.1.13"}
        re-frame/re-frame {:mvn/version "1.1.0"}
        reagent/reagent {:mvn/version "1.1.0"}
        com.degel/iron {:mvn/version "0.4.0"}
        com.andrewmcveigh/cljs-time {:mvn/version "0.5.2"}
        bidi/bidi {:mvn/version "2.1.6"}
        lifecheq/pushy {:mvn/version "0.3.9"}
        rid3/rid3 {:mvn/version "0.2.1-1"}
        cljs-css-modules/cljs-css-modules {:mvn/version "0.2.1"}
        stylefy/stylefy {:mvn/version "1.14.0"}
        re-graph/re-graph {:mvn/version "0.1.12-SNAPSHOT"}
        aero/aero {:mvn/version "1.1.5"}
        funcool/beicon {:mvn/version "2021.06.03-0"}
        thheller/shadow-cljs {:mvn/version "2.11.18"}}

 :paths ["src/clj" "src/cljs" "../../../libs" "../../../tools" "../../../vendor" "../../../rx-animation" "resources" "target"]
 :resource-paths ["resources"]

 :aliases {;; pull in specific versions of Clojure:
           :1.10 {:override-deps {org.clojure/clojure {:mvn/version "1.10.0"}}}
           :1.10.1 {:override-deps {org.clojure/clojure {:mvn/version "1.10.1"}}}
           :master {:override-deps {org.clojure/clojure {:mvn/version "1.11.0-master-SNAPSHOT"}}}
           :start {:main-opts ["-m" "build.cljs.dev" "dev"]
                   :extra-deps {binaryage/devtools   {:mvn/version "RELEASE"}
                                binaryage/dirac      {:mvn/version "RELEASE"}}}
           :dev-release {:main-opts ["-m" "build.s3.core"]
                         :extra-deps {amazonica/amazonica {:mvn/version "0.3.153"}}}
           :build {:main-opts ["-m" "build.cljs.minified" "prod"]
                   :extra-deps {lispyclouds/clj-docker-client {:mvn/version "0.2.3"}}}
           :release {:main-opts ["-m" "build.s3.core"]
                     :extra-deps {amazonica/amazonica {:mvn/version "0.3.153"}}}
           :invalidate {:main-opts ["-m" "build.cloudfront.core" "E7EZIFK8JP0EZ"]
                        :extra-deps {amazonica/amazonica {:mvn/version "0.3.153"}}}
           :outdated {:extra-deps {olical/depot {:mvn/version "1.4.0"}}
                      :main-opts ["-m" "depot.outdated.main"]}
           ;; REPL-related tools:
           ;; - start a modern nREPL server on a random available port:
           :nrepl {:extra-deps {nrepl/nrepl {:mvn/version "RELEASE"}}
                   :main-opts ["-m" "nrepl.cmdline"]}
           ;; - start a legacy nREPL server on port 60606:
           :nrepl/old {:extra-deps {org.clojure/tools.nrepl {:mvn/version "RELEASE"}}
                       :main-opts ["-e" "(require,'[clojure.tools.nrepl.server,:refer,[start-server]]),(start-server,:port,60606)"]}
           ;; - start a Socket REPL on port 50505:
           :socket {:jvm-opts ["-Dclojure.server.repl={:port,50505,:accept,clojure.core.server/repl}"]}
           ;; - start a Socket REPL on an available port, and display that port:
           ;; - specify -r as well if you want a repl
           :socket-zero {:jvm-opts ["-Dclojure.server.repl={:port,0,:accept,clojure.core.server/repl}"]
                         :main-opts ["-e" "(.getLocalPort,(get-in,@#'clojure.core.server/servers,[\"repl\",:socket]))"]}
           ;; - start a Socket pREPL on port 40404:
           :prepl {:jvm-opts ["-Dclojure.server.repl={:port,40404,:accept,clojure.core.server/io-prepl}"]}
           ;; - see https://atom.io/packages/proto-repl
           ;; - for use with Atom/ProtoREPL: clj -A:proto:nrepl
           :proto {:extra-deps {proto-repl/proto-repl {:mvn/version "RELEASE"}}}}}
